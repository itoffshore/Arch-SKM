--- PKGBUILD.orig	2024-10-06 16:04:28.526485430 +0100
+++ PKGBUILD	2024-10-06 16:10:34.065141343 +0100
@@ -8,8 +8,9 @@ pkgdesc='Linux RT'
 arch=(x86_64)
 url="https://gitlab.archlinux.org/dvzrv/linux-rt/-/commits/v${pkgver}"
 license=(GPL2)
-makedepends=(bc cpio git graphviz imagemagick libelf pahole perl
-python-sphinx python-sphinx_rtd_theme tar texlive-latexextra xmlto xz)
+#makedepends=(bc cpio git graphviz imagemagick libelf pahole perl
+#python-sphinx python-sphinx_rtd_theme tar texlive-latexextra xmlto xz)
+makedepends=(bc cpio git libelf pahole perl tar xmlto xz)
 options=(!strip)
 source=(
   git+https://gitlab.archlinux.org/dvzrv/linux-rt#tag=v$pkgver?signed
@@ -31,7 +32,34 @@ export KBUILD_BUILD_USER=$pkgbase
 export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
 
 prepare() {
-  cd $pkgbase
+    # Out-of-tree module signing
+  #
+  ######################################################
+  # this is added at the start of prepare() & replaces #
+  # 'cd $_srcname'                                     #
+  ######################################################
+  # uncomment for linux-xanmod-cacule & some other AUR kernels
+  # to match the Package Maintainer's variable for the kernel
+  # sources directory.
+  #
+  # local _srcname=linux-${_major}
+
+  msg2 "Rebuilding local signing key..."
+
+  cp -rf /usr/src/certs-local ./
+  cd certs-local
+
+  msg2 "Updating kernel config with new key..."
+
+  # NB: config path must be quoted for file globbing to work
+  # some kernels have multiple config files (e.g linux-libre)
+  # to see configurable options run:
+  # /usr/src/certs-local/genkeys.py -h
+  ./genkeys.py -v --config '../config*'
+
+  cd ../$pkgbase
+
+# cd $pkgbase
 
   echo "Setting version..."
   scripts/setlocalversion --save-scmversion
@@ -60,7 +88,8 @@ prepare() {
 
 build() {
   cd $pkgbase
-  make htmldocs all
+# make htmldocs all
+  make all
 }
 
 _package() {
@@ -170,6 +199,33 @@ _package-headers() {
   echo "Adding symlink..."
   mkdir -p "$pkgdir/usr/src"
   ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
+
+    # Out-of-tree module signing
+  ##################################################
+  # this is added at the end of _package-headers() #
+  ##################################################
+  # This is run in the kernel source / build directory
+  #
+  # some AUR kernels may also need to set $builddir to match
+  # the Package Maintainer's variable for the build dir
+  # inside the package:
+  #
+  # local builddir="$pkgdir/usr/lib/modules/${_kernver}/build"
+
+  msg2 "Local Signing certs for out-of-tree modules..."
+
+  certs_local_src="../certs-local"
+  certs_local_dst="${builddir}/certs-local"
+
+  # install certificates
+  ${certs_local_src}/install-certs.py $certs_local_dst
+
+  # install dkms tools
+  dkms_src="$certs_local_src/dkms"
+  dkms_dst="${pkgdir}/etc/dkms"
+  mkdir -p $dkms_dst
+
+  rsync -a $dkms_src/{kernel-sign.conf,kernel-sign.sh} $dkms_dst/
 }
 
 _package-docs() {
@@ -191,7 +247,8 @@ _package-docs() {
   ln -sr "$builddir/Documentation" "$pkgdir/usr/share/doc/$pkgbase"
 }
 
-pkgname=("$pkgbase" "$pkgbase-headers" "$pkgbase-docs")
+#pkgname=("$pkgbase" "$pkgbase-headers" "$pkgbase-docs")
+pkgname=("$pkgbase" "$pkgbase-headers")
 for _p in "${pkgname[@]}"; do
   eval "package_$_p() {
     $(declare -f "_package${_p#$pkgbase}")
